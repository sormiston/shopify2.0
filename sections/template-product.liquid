<link rel="stylesheet" href="https://unpkg.com/swiper@7/swiper-bundle.min.css">
<script src="https://unpkg.com/swiper@7/swiper-bundle.min.js"></script>

{% assign selected_variant = product.selected_or_first_available_variant %}

<style>
  .swiper-button-prev,
  .swiper-button-next {
    color: black;
    top: auto !important;
    height: 20px;
  }
  .swiper-button-prev::after,
  .swiper-button-next::after {
    font-size: 20px;
  }
  .swiper-pagination {
    color: black;
    bottom: 0 !important;
  }
  .swiper-pagination-bullet-active {
    background: black !important;
  }
  .product--information {
    height: fit-content;
  }
</style>

<script>
  
  
  
  document.addEventListener('alpine:init', () => {
    Alpine.data('variants', () => ({
      allVariants: JSON.parse(`{{ product.variants | json }}`),
      options: {
        option1: '{{ selected_variant.option1 }}',
        option2: '{{ selected_variant.option2 }}',
        option3: '{{ selected_variant.option3 }}',
      },
      hasLoaded: false,

      get currentOptions() {
        return Object.values(this.options).filter((value) => !!value);
      },

      get currentVariant() {
        const found = this.allVariants.find((variant) =>
          this.currentOptions.every((currentOption) => variant.options.includes(currentOption))
        );
        return found;
      },

      get variantPriceCompareAt() {
        return this.priceFormatter(this.currentVariant.compare_at_price);
      },

      get variantPrice() {
        return this.priceFormatter(this.currentVariant.price);
      },

      priceFormatter(number) {
        return `$${(number / 100).toFixed(2)}`;
      },

      init() {
        this.$watch('currentVariant', () => {
          {% comment %} update URL to include variant param, without navigating {% endcomment %}
          window.history.replaceState({}, '', `{{ product.url }}?variant=${this.currentVariant.id}`);
        });
        this.hasLoaded = true;
      },
    }));
  });



</script>
<div class="max-w-6xl mx-auto my-8">
  <div class="grid grid-cols-1 md:grid-cols-2 gap-3">
    <div class="product--medias">
      <div class="hidden md:block">
        {% for media in product.media %}
          <div class="h-100 overflow-hidden p-2">
            {% render 'product-media', media: media %}
          </div>
        {% endfor %}
      </div>

      <div class="md:hidden">
        <div class="swiper h-94">
          <div class="swiper-wrapper">
            {% for media in product.media %}
              <div class="swiper-slide">
                <div class="h-80 overflow-hidden p-2">
                  {% render 'product-media', media: media %}
                </div>
              </div>
            {% endfor %}
          </div>

          <div class="swiper-pagination"></div>

          <div class="swiper-button-prev"></div>
          <div class="swiper-button-next"></div>
        </div>
      </div>
    </div>

    <div x-data="variants" class="product--information sticky top-5 p-2">
      {% form 'product', product, id: 'product-form', novalidate: 'novalidate' %}
        <input type="hidden" name="id" x-bind:value="currentVariant.id">

        {% for block in section.blocks %}
          {% case block.type %}
            {% when 'vendor' %}
              <div class="my-3">
                <span class="text-xs text-gray-500">{{ product.vendor }}</span>
              </div>
            {% when 'title' %}
              <div class="my-3">
                <h1 class="text-3xl text-gray-900">{{ product.title }}</h1>
              </div>
            {% when 'price' %}
              <div class="my-3" id="price-{{ section.id }}">
                <span x-text="variantPriceCompareAt" class="text-base text-gray-500 line-through"></span>
                <span x-text="variantPrice" class="text-lg text-gray-900"></span>
                <span
                  x-if="variantPrice < variantPriceCompareAt"
                  class="px-5 py-1 text-sm font-bold bg-red-500 rounded-full text-white mx-4"
                >
                  Sale
                </span>
              </div>
            {% when 'variant_selector' %}
              <div class="my-3">
                {% unless product.has_only_default_variant %}
                  <div>
                    {% for option in product.options_with_values %}
                      <label for="Option-{{ section.id }}-{{ forloop.index0 }}">{{ option.name }}</label>

                      <div class="my-2">
                        <select
                          name="options[{{ option.name | escape }}]"
                          id="Option-{{ section.id }}-{{ forloop.index0 }}"
                          class="w-full border py-3 px-3"
                          x-model="options.option{{ forloop.index }}"
                        >
                          {% for value in option.values %}
                            <option
                              value="{{ value | escape }}"
                            >
                              {{ value }}
                            </option>
                          {% endfor %}
                        </select>
                      </div>
                    {% endfor %}
                  </div>
                {% endunless %}
              </div>

            {% when 'quantity' %}
              <div class="my-3">
                <label for="Quantity-{{ section.id }}">Quantity</label>

                <div class="my-2">
                  <input
                    type="number"
                    name="quantity"
                    id="Quantity-{{ section.id }}"
                    value="1"
                    min="1"
                    class="w-full border px-3 py-3"
                  >
                </div>
              </div>
            {% when 'description' %}
              <div class="my-3">
                <p class="text-gray-700">{{ product.description }}</p>
              </div>

            {% when 'checkout_buttons' %}
              <div class="my-3">
                <button
                  type="submit"
                  name="add"
                  class="w-full px-6 py-4 bg-gray-900 text-white hover:bg-gray-700 rounded-sm my-2"
                  {% if selected_variant.available == false %}
                    disabled
                  {% endif %}
                >
                  {% if selected_variant.available == false %}
                    Sold out
                  {% else %}
                    Add to cart
                  {% endif %}
                </button>
              </div>
            {% else %}

          {% endcase %}
        {% endfor %}
      {% endform %}
    </div>
  </div>
</div>

<script>
  const swiper = new Swiper('.swiper', {
    direction: 'horizontal',

    pagination: {
      el: '.swiper-pagination',
    },

    navigation: {
      prevEl: '.swiper-button-prev',
      nextEl: '.swiper-button-next',
    },
  });
</script>

{% schema %}
{
  "name": "Product",
  "blocks": [
    {
      "type": "vendor",
      "name": "Vendor",
      "limit": 1
    },
    {
      "type": "title",
      "name": "Title",
      "limit": 1
    },
    {
      "type": "price",
      "name": "Price",
      "limit": 1
    },
    {
      "type": "variant_selector",
      "name": "Variant Selector",
      "limit": 1
    },
    {
      "type": "quantity",
      "name": "Quantity",
      "limit": 1
    },
    {
      "type": "description",
      "name": "Description",
      "limit": 1
    },
    {
      "type": "checkout_buttons",
      "name": "Checkout Buttons",
      "limit": 1
    }
  ]
}
{% endschema %}
